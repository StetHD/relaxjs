{"version":3,"sources":["internals.ts"],"names":[],"mappings":"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","file":"internals.js","sourcesContent":["/*\r\n * Relax.js version 0.2.0\r\n * by Michele Ursino - 2015\r\n*/\r\n\r\n///<reference path='./relaxjs.ts' />\r\n\r\nimport http = require(\"http\");\r\nimport fs = require('fs');\r\nimport mime = require('mime');\r\nimport Q = require('q');\r\nimport querystring = require('querystring');\r\nimport bunyan = require('bunyan');\r\nimport _ = require(\"lodash\");\r\nimport xml2js = require('xml2js');\r\nimport multiparty = require('multiparty');\r\n\r\nimport relaxjs = require('./relaxjs');\r\n\r\nvar _log : bunyan.Logger;\r\nvar _appName : string;\r\nvar _multipOptions : multiparty.FormOptions = {};\r\n\r\n/*\r\n * Bunyan log utilities\r\n*/\r\n\r\nexport function setLogVerbose( flag : boolean ) {\r\n  _log.level(bunyan.INFO);\r\n}\r\n\r\nexport function initLog( appName : string ) {\r\n  _appName = appName;\r\n  _log = bunyan.createLogger( { name: appName} );\r\n  _log.level(bunyan.WARN);\r\n}\r\n\r\nexport function log(): bunyan.Logger {\r\n  if ( !_log ) {\r\n    _log = bunyan.createLogger( { name: 'no app'} );\r\n    _log.level(bunyan.WARN);\r\n  }\r\n  return _log;\r\n}\r\n\r\n/*\r\n * multipart/form-data settings\r\n*/\r\nexport function setMultipartDataTempDir( path: string ) {\r\n  _multipOptions.uploadDir = path;\r\n}\r\n\r\nexport function format( source: string , ...args: any[]): string {\r\n return source.replace(/{(\\d+)}/g, function( match: any , n: number) {\r\n    return typeof args[n] != 'undefined'\r\n      ? args[n]\r\n      : match\r\n    ;\r\n  });\r\n}\r\n\r\nexport function slugify ( source: string ): string\r\n{\r\n  var res = source.toLowerCase()\r\n                  .replace(/\\s+/g, '-')           // Replace spaces with -\r\n                  .replace(/[^\\w\\-]+/g, '')       // Remove all non-word chars\r\n                  .replace(/\\-\\-+/g, '-')         // Replace multiple - with single -\r\n                  .replace(/^-+/, '')             // Trim - from start of text\r\n                  .replace(/-+$/, '');\r\n  return res;\r\n}\r\n\r\n/*\r\n * Parse the body of a request according the given mime-type\r\n*/\r\nexport function parseRequestData( req: http.ServerRequest,  contentType: string ) : Q.Promise<any> {\r\n  var log = _log.child( { func: 'internals.parseData'} );\r\n  var later = Q.defer< any >();\r\n  var mimeType = contentType.split(/[\\s,;]+/)[0];\r\n\r\n  if ( mimeType === 'multipart/form-data' ) {\r\n    log.info('parsing multipart/form-data using multiparty');\r\n    var form = new multiparty.Form( _multipOptions );\r\n    form.parse(req, function(err, mpfields, mpfiles) {\r\n      if ( !err ) {\r\n        var bodyData = { fields: mpfields, files: mpfiles };\r\n        later.resolve(bodyData);\r\n      }\r\n      else {\r\n        later.reject(err);\r\n      }\r\n    });\r\n  }\r\n  else {\r\n    // Read the full message body before parsing (if available)\r\n    var bodyData : string = '';\r\n    req.on('data', function (data) { bodyData += data; });\r\n    req.on('end', function () {\r\n      if ( !bodyData || bodyData.length === 0 ) {\r\n        later.resolve({});\r\n        return later.promise;\r\n      }\r\n      log.info('Parsing \"%s\" as (%s)',bodyData,mimeType);\r\n      try {\r\n        switch(mimeType) {\r\n          case 'application/xml':\r\n          case 'text/xml':\r\n            xml2js.parseString(\r\n              bodyData,\r\n              { explicitRoot: false, explicitArray: false },\r\n              function( err: Error, res:any ) {\r\n                if (err) {\r\n                  _log.error('Error parsing XML data with ' );\r\n                  _log.error( err );\r\n                  later.reject(err);\r\n                }\r\n                else {\r\n                  log.info('Parsed XML as: %s', JSON.stringify(res));\r\n                  later.resolve(res);\r\n                }\r\n              });\r\n            break;\r\n          case 'application/x-www-form-urlencoded':\r\n            log.info('Parsing \"%s\" ', bodyData );\r\n            var parsedData = querystring.parse(bodyData);\r\n            log.info('Parsed \"%s\" ', JSON.stringify(parsedData));\r\n            later.resolve( parsedData );\r\n            break;\r\n          default:\r\n            later.resolve( JSON.parse(bodyData) );\r\n            break;\r\n        }\r\n      }\r\n      catch( err ) {\r\n        _log.error('Error parsing incoming data - %s - with %s',bodyData,contentType );\r\n        _log.error( err );\r\n        later.reject(err);\r\n      }\r\n    });\r\n  }\r\n  return later.promise;\r\n}\r\n\r\n// Internal functions to emit error/warning messages\r\nexport function emitCompileViewError( content: string, err: TypeError, filename: string ) : relaxjs.RxError {\r\n  var errTitle = '[error] Compiling View: %s'+ filename ;\r\n  var errMsg = err.message;\r\n  var code =  format('<h4>Content being compiled</h4><pre>{0}</pre>', _.escape(content));\r\n  _log.error(errTitle);\r\n  return new relaxjs.RxError(errMsg, errTitle, 500, code );\r\n}\r\n\r\n/*\r\n * Creates a RxError object with the given message and resource name\r\n */\r\nexport function emitError( content: string, resname: string, errcode: number = 500 ) : relaxjs.RxError {\r\n  var errTitle = format('Error serving: {0}', resname);\r\n  var errMsg = content;\r\n  _log.error(errTitle);\r\n  return new relaxjs.RxError(errMsg, errTitle, errcode );\r\n}\r\n\r\n/*\r\n * Emits a promise for a failure message\r\n*/\r\nexport function promiseError( msg: string, resName : string, errcode: number = 500  ) : Q.Promise< relaxjs.Embodiment > {\r\n  var later = Q.defer< relaxjs.Embodiment >();\r\n  _.defer( () => {\r\n    _log.error(msg);\r\n    later.reject( emitError( msg, resName, errcode )  )\r\n  });\r\n  return later.promise;\r\n}\r\n\r\n/*\r\n * Create a Redirect embodiment to force the requester to get the given location\r\n*/\r\nexport function redirect( location: string ) : Q.Promise< relaxjs.Embodiment > {\r\n  var later = Q.defer< relaxjs.Embodiment >();\r\n  _.defer( () => {\r\n    _log.info('Sending a Redirect 307 towards %s',location );\r\n    var redir = new relaxjs.Embodiment('text/html');\r\n    redir.httpCode = 307; // Temporary Redirect (since HTTP/1.1)\r\n    redir.location = location;\r\n    later.resolve(redir);\r\n    });\r\n  return later.promise;\r\n}\r\n\r\n/*\r\n * Realize a view from a generic get for a static file\r\n * Return a promise that will return the full content of the view.\r\n*/\r\nexport function viewStatic( filename: string, headers: relaxjs.ResponseHeaders  = {} ) : Q.Promise< relaxjs.Embodiment > {\r\n  var fname = '[view static]';\r\n  var log = _log.child( { func: 'internals.viewStatic'} );\r\n\r\n  var mtype = mime.lookup(filename);\r\n  var laterAction = Q.defer< relaxjs.Embodiment >();\r\n  var staticFile = '.' + filename;\r\n  log.info('serving %s',staticFile);\r\n  \r\n  if ( !fs.existsSync(staticFile) ) {\r\n    log.warn('File \"%s\" not found',staticFile);\r\n    laterAction.reject( new relaxjs.RxError(`File ${filename} not found`, 'File Not Found', 404 ) );\r\n  } \r\n  else {   \r\n    fs.stat( staticFile , ( err, stats: fs.Stats ) => {\r\n      log.info(`Sreaming ${staticFile}`);\r\n      headers['content-length'] = stats.size.toString();\r\n      var readStream = fs.createReadStream( staticFile );\r\n      var reply = new relaxjs.Embodiment( mtype, 200, readStream );\r\n      reply.additionalHeaders = headers;\r\n      laterAction.resolve( reply );\r\n    });\r\n   \r\n  }\r\n  \r\n  /*\r\n  fs.readFile( staticFile, function( err : Error, content : Buffer ) {\r\n    if ( err ) {\r\n      log.warn('%s file \"%s\" not found',fname,staticFile);\r\n      laterAction.reject( new relaxjs.RxError( filename + ' not found', 'File Not Found', 404 ) );\r\n    }\r\n    else {\r\n      var reply = new relaxjs.Embodiment( mtype, 200, content );\r\n      reply.additionalHeaders = headers;\r\n      laterAction.resolve( reply );\r\n    }\r\n  });\r\n  */\r\n  \r\n  return laterAction.promise;\r\n}\r\n\r\n/*\r\n * Return a promise for a JSON or XML Embodiment for the given viewData.\r\n * Note that this function strips automatically all the data item starting with '_'\r\n * (undercore) since - as a convention in relax.js - these are private member variables.\r\n*/\r\nexport function createEmbodiment( viewData: any, mimeType: string ) : Q.Promise< relaxjs.Embodiment > {\r\n  var log = _log.child( { func: 'internals.viewJson'} );\r\n  var later = Q.defer< relaxjs.Embodiment >();\r\n  var resourceName = 'resource';\r\n  log.info('Creating Embodiment as %s',mimeType);\r\n  _.defer( () => {\r\n    try {\r\n      // 1 Copy the public properties and _name to a destination object for serialization.\r\n      var destObj = {};\r\n      _.each( _.keys( viewData) , function(key: string) {\r\n        //\r\n        if ( key === '_name' ) {\r\n          destObj['name'] = viewData[key];\r\n          resourceName = viewData[key];\r\n        }\r\n        else if ( key.indexOf('_') === 0 )\r\n          return;\r\n        else {\r\n          //console.log('['+key+'] is '+viewData[key] );\r\n          destObj[key] = viewData[key];\r\n        }\r\n      });\r\n      // 2 - build the embodiment serializing the data as a Buffer\r\n      // log.info('Serializing \"%s\"',JSON.stringify(destObj));\r\n      var dataString = '';\r\n      switch(mimeType) {\r\n        case 'application/xml':\r\n        case 'text/xml':\r\n          var builder = new xml2js.Builder({ rootName: resourceName, renderOpts : { 'pretty': false }, headless: true });\r\n          dataString = builder.buildObject( destObj );\r\n          break;\r\n        default:\r\n          dataString = JSON.stringify( destObj );\r\n          break;\r\n      }\r\n      // log.info('Delivering: \"%s\"',dataString);\r\n      var e = new relaxjs.Embodiment( mimeType, 200, new Buffer( dataString,'utf-8' ) );\r\n      later.resolve( e );\r\n    }\r\n    catch( err ) {\r\n      log.error(err);\r\n      later.reject( new relaxjs.RxError('JSON Serialization error: '+err ) )\r\n    }\r\n  });\r\n  return later.promise;\r\n}\r\n\r\n/*\r\n * Realize the given view (viewName) merging it with the given data (viewData)\r\n * It can use an embedding view layout as third argument (optional)\r\n * Return a promise that will return the full content of the view + the viewdata.\r\n*/\r\nexport function viewDynamic(\r\n    viewName: string,\r\n    viewData: any,\r\n    layoutName?: string ) : Q.Promise< relaxjs.Embodiment > {\r\n  var log = _log.child( { func: 'internals.viewDynamic'} );\r\n  var laterAct = Q.defer< relaxjs.Embodiment >();\r\n  var readFile = Q.denodeify(fs.readFile);\r\n  var templateFilename = './views/'+viewName+'._';\r\n  if ( viewName === 'site') {\r\n    templateFilename = `${__dirname}/../views/${viewName}._`;\r\n  }\r\n  if ( layoutName ) {\r\n    var layoutFilename = './views/'+layoutName+'._';\r\n    log.info('Reading template %s in layout %s',templateFilename, layoutFilename );\r\n    Q.all( [ readFile( templateFilename,  { 'encoding':'utf8'} ),\r\n             readFile( layoutFilename,    { 'encoding':'utf8'} ) ])\r\n    .spread( (content: string, outerContent : string) => {\r\n      try {\r\n        log.info('Compile composite view %s in %s',templateFilename,layoutFilename);\r\n        var innerContent = new Buffer( _.template(content)(viewData), 'utf-8' );\r\n        var fullContent = new Buffer( _.template(outerContent)( { page: innerContent, name: viewData.Name, data: viewData.data }), 'utf-8');\r\n        laterAct.resolve( new relaxjs.Embodiment( 'text/html', 200, fullContent ));\r\n      }\r\n      catch( err ) {\r\n        log.error( err );\r\n        laterAct.reject( emitCompileViewError(content,err, templateFilename +' in '+ layoutFilename) );\r\n      }\r\n    })\r\n    .catch( (err : Error ) => {\r\n      log.error( err );\r\n      laterAct.reject( emitCompileViewError('N/A',err, templateFilename +' in '+ layoutFilename ) );\r\n    });\r\n  }\r\n  else {\r\n    log.info('Reading template %s',templateFilename);\r\n    readFile( templateFilename,  { 'encoding':'utf8'} )\r\n    .then( ( content:string ) => {\r\n      try {\r\n        log.info( 'Compiling view %s', templateFilename );\r\n        var fullContent = new Buffer( _.template(content)(viewData) , 'utf-8') ;\r\n        laterAct.resolve( new relaxjs.Embodiment( 'text/html', 200, fullContent ));\r\n      }\r\n      catch( err ) {\r\n        log.error( err );\r\n        laterAct.reject( emitCompileViewError(content,err, templateFilename ) );\r\n      }\r\n    })\r\n    .catch( ( err : Error ) => {\r\n      log.error( err );\r\n      laterAct.reject( emitCompileViewError('N/A',err, templateFilename ) );\r\n    });\r\n  }\r\n  return laterAct.promise;\r\n}\r\n"],"sourceRoot":"/source/"}
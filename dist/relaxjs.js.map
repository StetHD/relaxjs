{"version":3,"sources":["relaxjs.ts"],"names":[],"mappings":"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","file":"relaxjs.js","sourcesContent":["/*\r\n * Relax.js version 0.2.0\r\n * by Michele Ursino June - 2015\r\n * -------------------------------------------------------\r\n*/\r\n\r\n///<reference path='references.ts' />\r\n\r\nimport * as http from 'http';\r\nimport * as fs from 'fs';\r\nimport * as stream from 'stream';\r\nimport * as Q from 'q';\r\nimport * as _ from 'lodash';\r\nimport * as xml2js from 'xml2js';\r\n\r\n// sub-modules importing\r\nimport * as internals from './internals';\r\nimport * as routing from './routing';\r\n\r\nexports.routing = routing;\r\nexports.internals = internals;\r\n\r\n/* tslint:disable */\r\nconst packageinfo : any = require( __dirname + '/../package.json');\r\nconst version : string = packageinfo.version;\r\n/* tslint:enable */\r\n\r\n/**\r\n * print out the version\r\n *\r\n * @export\r\n */\r\nexport function relaxjs() : void {\r\n  console.log(`relaxjs version ${version}`);\r\n}\r\n\r\n/**\r\n * A Resource map is a collection of Resource arrays.\r\n * Each arrray contain resource of the same type.\r\n * @internal\r\n*/\r\nexport interface ResourceMap {\r\n  [name : string] : Container [];\r\n}\r\n\r\n/**\r\n * Response headers as strings indexed by the header name\r\n */\r\nexport interface ResponseHeaders {\r\n  [ headerName : string ] : string;\r\n}\r\n\r\n/**\r\n * Response definition: every resource generate an instance of ResourceResponse.\r\n * This is generated automatically from a resource by calling a response function:\r\n * ok(), fail() or redirect() from a resource response function.\r\n * @internal\r\n*/\r\nexport interface ResourceResponse {\r\n  result : string;\r\n  data? : any;\r\n  httpCode? : number;\r\n  location? : string;\r\n  cookiesData? : string[];\r\n  headers? : ResponseHeaders;\r\n}\r\n\r\n/**\r\n * Filter complete function definition.\r\n * This is called to complete a filter with error or data to pass to a resource\r\n *\r\n * @export\r\n * @interface FilterResultCB\r\n */\r\nexport interface FilterResultCB {\r\n  ( err? : RxError, data? : any ) : void;\r\n}\r\n\r\n/**\r\n * A filter function is called on every request and can stop the dispatch of the request to the\r\n * target resource. The call is asyncronous. When complete it must call the complete function\r\n * passed as third argument.\r\n * Important Notes:\r\n * Filters are called by the Site before attempting to route any request to a resource.\r\n * Filters can return data to the resource using the filterData member.\r\n * Filters must all succeed in order for the request to reach the resource\r\n * Filters are not called in any predefined order (there cannot be dependencies from each other filter)\r\n */\r\nexport interface RequestFilter {\r\n  ( route : routing.Route, body : any, complete : FilterResultCB ) : any ;\r\n}\r\n\r\n/**\r\n * Definition for Collection of filters\r\n * @internal\r\n*/\r\ninterface RequestFilterDict {\r\n  [ name : string ] : RequestFilter;\r\n}\r\n\r\n/**\r\n * Data produced from the filters functions are available using the filter name as index\r\n*/\r\nexport interface FiltersData {\r\n  [ name : string ] : any;\r\n}\r\n\r\n\r\n/**\r\n * The resource HttpPlayer implement the resource runtime capabilities.\r\n * Classes implementing HttpPlayers must implement HTTP verb functions defined here.\r\n * @export\r\n * @interface HttpPlayer\r\n */\r\nexport interface HttpPlayer {\r\n  name : string;\r\n  urlName : string;\r\n\r\n  /**\r\n   * Asks for the response identical to the one that would correspond to a GET request, but without the response body.\r\n   * @internal\r\n   * @param {routing.Route} route (description)\r\n   * @param {FiltersData} filtersData (description)\r\n   * @returns {Q.Promise<Embodiment>} (description)\r\n   */\r\n  head( route : routing.Route, filtersData : FiltersData) : Q.Promise<Embodiment> ;\r\n\r\n  //\r\n  /**\r\n   * A GET requests returns a representation of the specified resource.\r\n   * @internal\r\n   * @param {routing.Route} route (description)\r\n   * @param {FiltersData} filtersData (description)\r\n   * @returns {Q.Promise<Embodiment>} (description)\r\n   */\r\n  get( route : routing.Route, filtersData : FiltersData ) : Q.Promise<Embodiment> ;\r\n\r\n  /**\r\n   * A POST requests add new subordinate of the web resource identified by the URI.\r\n   * @internal\r\n   * @param {routing.Route} route (description)\r\n   * @param {*} body (description)\r\n   * @param {FiltersData} filtersData (description)\r\n   * @returns {Q.Promise<Embodiment>} (description)\r\n   */\r\n  post( route : routing.Route, body : any, filtersData : FiltersData ) : Q.Promise<Embodiment> ;\r\n\r\n  /**\r\n   * A PUT requests that the enclosed entity be stored under the supplied URI.\r\n   * If the URI refers to an already existing resource, it is modified otherwise the resource can be created.\r\n   * @internal\r\n   * @param {routing.Route} route (description)\r\n   * @param {*} body (description)\r\n   * @param {FiltersData} filtersData (description)\r\n   * @returns {Q.Promise<Embodiment>} (description)\r\n   */\r\n  put( route : routing.Route, body : any, filtersData : FiltersData ) : Q.Promise<Embodiment> ;\r\n\r\n  //\r\n  /**\r\n   * A Delete request deletes the specified resource.\r\n   * @internal\r\n   * @param {routing.Route} route (description)\r\n   * @param {FiltersData} filtersData (description)\r\n   * @returns {Q.Promise<Embodiment>} (description)\r\n   */\r\n  delete( route : routing.Route, filtersData : FiltersData ) : Q.Promise<Embodiment> ;\r\n\r\n  /**\r\n   * A PATCH request applies partial modifications to a resource.\r\n   * @internal\r\n   * @param {routing.Route} route (description)\r\n   * @param {*} body (description)\r\n   * @param {FiltersData} filtersData (description)\r\n   * @returns {Q.Promise<Embodiment>} (description)\r\n   */\r\n  patch( route : routing.Route, body : any, filtersData : FiltersData ) : Q.Promise<Embodiment> ;\r\n}\r\n\r\n/**\r\n * This is the definition for a Resource as passed to a Site object.\r\n *\r\n * @export\r\n * @interface Resource\r\n */\r\nexport interface Resource {\r\n  /**\r\n   * (description)\r\n   *\r\n   * @type {string}\r\n   */\r\n  name : string;\r\n  /**\r\n   * (description)\r\n   *\r\n   * @type {string}\r\n   */\r\n  key? : string;\r\n  /**\r\n   * (description)\r\n   *\r\n   * @type {string}\r\n   */\r\n  view? : string;\r\n  /**\r\n   * (description)\r\n   *\r\n   * @type {string}\r\n   */\r\n  layout? : string;\r\n  /**\r\n   * (description)\r\n   *\r\n   * @type {*}\r\n   */\r\n  data? : any;\r\n  /**\r\n   * (description)\r\n   *\r\n   * @type {Resource[]}\r\n   */\r\n  resources? : Resource[];\r\n  /**\r\n   * (description)\r\n   *\r\n   * @type {string[]}\r\n   */\r\n  urlParameters? : string[];\r\n  /**\r\n   * the mime type of the response generated from this resource\r\n   *\r\n   * @type {string}\r\n   */\r\n  outFormat? : string;\r\n  /**\r\n   * Additional headers to generate in the responses from this resource\r\n   *\r\n   * @type {ResponseHeaders}\r\n   */\r\n  headers? : ResponseHeaders;\r\n  /**\r\n   * not yet available\r\n   * @internal\r\n   * @type {( query : any, respond : Response ) => void}\r\n   */\r\n  onHead? : ( query : any, respond : Response ) => void;\r\n  /**\r\n   * Function to call upon receiving of a GET request\r\n   *\r\n   * @type {( query : any, respond : Response ) => void}\r\n   */\r\n  onGet? : ( query : any, respond : Response ) => void;\r\n  /**\r\n   * Function to call upon receiving of a POST request\r\n   *\r\n   * @type {( query : any, body : any, respond : Response) => void}\r\n   */\r\n  onPost? : ( query : any, body : any, respond : Response) => void;\r\n  /**\r\n   * Function to call upon receiving of a PUT request\r\n   * not yet implemented\r\n   * @internal\r\n   * @type {( query : any, body : any, respond : Response) => void}\r\n   */\r\n  onPut? : ( query : any, body : any, respond : Response) => void;\r\n  /**\r\n   * Function to call upon receiving of a DELETE request\r\n   *\r\n   * @type {( query : any, respond : Response ) => void}\r\n   */\r\n  onDelete? : ( query : any, respond : Response ) => void;\r\n  /**\r\n   * Function to call upon receiving of a PATCH request\r\n   *\r\n   * @type {( query : any, body : any, respond : Response) => void}\r\n   */\r\n  onPatch? : ( query : any, body : any, respond : Response) => void;\r\n}\r\n\r\n/**\r\n * Standard node Error: type declaration\r\n * @internal\r\n*/\r\nexport declare class Error {\r\n    public name : string;\r\n    public message : string;\r\n    public stack : string;\r\n    constructor(message? : string);\r\n}\r\n\r\n/**\r\n * Extended Error class for Relax.js\r\n*/\r\nexport class RxError extends Error {\r\n\r\n  /**\r\n   * HTTP error code\r\n   *\r\n   * @type {number}\r\n   */\r\n  public httpCode : number;\r\n  /**\r\n   * Extra information about the errror\r\n   *\r\n   * @type {string}\r\n   */\r\n  public extra : string;\r\n  /**\r\n   * Error name\r\n   *\r\n   * @type {string}\r\n   */\r\n  public name : string;\r\n  /**\r\n   * Error message\r\n   *\r\n   * @type {string}\r\n   */\r\n  public message : string;\r\n  /**\r\n   * Call stack at the moment the error was generated\r\n   *\r\n   * @type {string}\r\n   */\r\n  public stack : string;\r\n\r\n  /**\r\n   * Creates an instance of RxError.\r\n   *\r\n   * @param {string} message (description)\r\n   * @param {string} [name] (description)\r\n   * @param {number} [code] (description)\r\n   * @param {string} [extra] (description)\r\n   */\r\n  constructor( message : string, name? : string, code? : number, extra? : string ) {\r\n    super();\r\n    const tmp = new Error(); // We use this to generate the stack info to assign to this error\r\n    this.message = message;\r\n    this.name = name;\r\n    this.httpCode = code ? code : 500;\r\n    this.stack = tmp.stack;\r\n    this.extra = extra;\r\n  }\r\n  /**\r\n   * Return the http error code\r\n   *\r\n   * @returns {number} (description)\r\n   */\r\n  getHttpCode() : number {\r\n    return this.httpCode;\r\n  }\r\n  getExtra() : string {\r\n    return this.extra ? this.extra : '' ;\r\n  }\r\n\r\n  /**\r\n   * Serialize the error to a string.\r\n   *\r\n   * @returns {string} (description)\r\n   */\r\n  toString() : string {\r\n    return internals.format('RxError {0}: {1}\\n{2}\\nStack:\\n{3}' , this.httpCode, this.name, this.message, this.stack);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * A container of resources. This class offer helper functions to add and retrieve resources\r\n * child resources\r\n*/\r\nexport class Container {\r\n\r\n  /** @internal */\r\n  public data : any = {};\r\n  /** @internal */\r\n  private _parent : Container;\r\n  /** @internal */\r\n  protected _name : string = '';\r\n  /** @internal */\r\n  protected _cookiesData : string[] = [];   // Outgoing cookies to be set\r\n  /** @internal */\r\n  protected _cookies : string[] = [];        // Received cookies unparsed\r\n  /** @internal */\r\n  protected _resources : ResourceMap = {};\r\n  /** @internal */\r\n  protected _headers : ResponseHeaders = {};\r\n\r\n  /**\r\n   * Creates an instance of Container.\r\n   *\r\n   * @param {Container} [parent] (description)\r\n   */\r\n  constructor( parent? : Container ) {\r\n    this._parent = parent;\r\n  }\r\n\r\n  /**\r\n   * (description)\r\n   *\r\n   * @readonly\r\n   * @type {Container}\r\n   */\r\n  get parent() : Container {\r\n    return this._parent;\r\n  }\r\n  /**\r\n   * (description)\r\n   *\r\n   * @readonly\r\n   * @type {string}\r\n   */\r\n  get name() : string {\r\n    return this._name;\r\n  }\r\n  /**\r\n   * (description)\r\n   *\r\n   * @readonly\r\n   * @type {string}\r\n   */\r\n  get urlName() : string {\r\n    return internals.slugify(this.name);\r\n  }\r\n\r\n  /**\r\n   * (description)\r\n   *\r\n   * @param {string} newName (description)\r\n   */\r\n  setName( newName : string ) : void {\r\n    this._name = newName;\r\n  }\r\n\r\n  /**\r\n   * Add the given headers to the one already set\r\n   */\r\n  set headers( h : ResponseHeaders ) {\r\n    const self = this;\r\n    _.forOwn( h, ( value : string, key : string ) => self._headers[key] = value );\r\n  }\r\n\r\n  /**\r\n   * get the headers\r\n   *\r\n   * @type {ResponseHeaders}\r\n   */\r\n  get headers() : ResponseHeaders {\r\n    return this._headers;\r\n  }\r\n\r\n  /**\r\n   * (description)\r\n   *\r\n   * @param {string} cookie (description)\r\n   */\r\n  setCookie( cookie : string ) : void {\r\n    this._cookiesData.push(cookie);\r\n  }\r\n  /**\r\n   * (description)\r\n   *\r\n   * @returns {string[]} (description)\r\n   */\r\n  getCookies( ) : string[] {\r\n    return this._cookies;\r\n  }\r\n\r\n  /**\r\n   * Cookies data as a string array\r\n   *\r\n   * @readonly\r\n   * @type {string[]}\r\n   */\r\n  get cookiesData() : string[] {\r\n    return this._cookiesData;\r\n  }\r\n\r\n  /**\r\n   * (description)\r\n   * @internal\r\n   */\r\n  resetOutgoingCookies() : void {\r\n    this._cookiesData = [];\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Remove a child resource from this container\r\n   * @internal\r\n  */\r\n  remove( child : ResourcePlayer ) : boolean {\r\n    const log = internals.log().child( { func : 'Container.remove'} );\r\n    const resArr = this._resources[child.name];\r\n    if ( !resArr ) {\r\n      return false;\r\n    }\r\n    const idx = _.indexOf(resArr, child );\r\n    if ( idx < 0 ) {\r\n      return false;\r\n    }\r\n    resArr.splice(idx, 1);\r\n    log.info('- %s', child.name);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Inspect the cuurent path in the given route and create the direction\r\n   * to pass a http request to a child resource.\r\n   * If the route.path is terminal this function finds the immediate target resource\r\n   * and assign it to the direction.resource.\r\n   * This function manages also the interpretaiton of an index in the path immediately\r\n   * after the resource name.\r\n   * @internal\r\n  */\r\n  protected _getStepDirection( route : routing.Route ) : Direction {\r\n    const log = internals.log().child( { func : 'Container.getStepDirection'} );\r\n    const direction : Direction = new Direction();\r\n    log.info('Follow next step on %s', JSON.stringify(route.path) );\r\n    direction.route = route.stepThrough(1);\r\n    const childResName : string = direction.route.getNextStep();\r\n\r\n    if ( childResName in this._resources ) {\r\n      let idx : number = 0;\r\n      if ( this._resources[childResName].length > 1 ) {\r\n        // Since there are more than just ONE resource maching the name\r\n        // we check the next element in the path for the index needed to\r\n        // locate the right resource in the array.\r\n        if ( direction.route.path[1] !== undefined ) {\r\n          idx = parseInt(direction.route.path[1]) ;\r\n          if ( isNaN(idx) ) {\r\n            idx = 0;\r\n          }\r\n          else {\r\n            direction.route = direction.route.stepThrough(1);\r\n          }\r\n        }\r\n\r\n      }\r\n      log.info('Access Resource \"%s\"[%d] ', childResName, idx );\r\n      direction.resource = this.getChild(childResName, idx);\r\n    }\r\n\r\n    return direction;\r\n  }\r\n\r\n\r\n  /**\r\n   * Returns the direction toward the resource in the given route.\r\n   * The Direction object returned may point directly to the resource requested or\r\n   * may point to a resource that will lead to the requested resource\r\n   * @internal\r\n  */\r\n  protected _getDirection( route : routing.Route, verb : string = 'GET' ) : Direction {\r\n    const log = internals.log().child( { func: 'Container._getDirection'} );\r\n\r\n    log.info('%s Step into %s ', verb, route.pathname );\r\n    const direction = this._getStepDirection(route);\r\n    if ( direction && direction.resource ) {\r\n      direction.verb = verb;\r\n      return direction;\r\n    }\r\n    log.info('No Direction found', verb, route.pathname );\r\n    return undefined;\r\n  }\r\n\r\n\r\n  /**\r\n   * Return the resource matching the given path.\r\n  */\r\n  getResource( pathname : string ) : Container {\r\n    const route = new routing.Route(pathname);\r\n    let direction = this._getDirection(route); // This one may return the resource directly if cached\r\n    if ( !direction ) {\r\n      return undefined;\r\n    }\r\n    let resource : Container = direction.resource;\r\n    route.path = direction.route.path;\r\n    while ( route.path.length > 1 ) {\r\n      direction = resource._getStepDirection(route);\r\n      if ( direction ) {\r\n        resource = direction.resource;\r\n        route.path = direction.route.path;\r\n      }\r\n      else {\r\n        return undefined;\r\n      }\r\n    }\r\n    return resource;\r\n  }\r\n\r\n\r\n  /**\r\n   * Add a resource of the given type as child\r\n   *\r\n   * @param {Resource} newRes (description)\r\n   */\r\n  add( newRes : Resource ) : void {\r\n    const log = internals.log().child( { func : 'Container.add'} );\r\n    /* tslint:disable */\r\n    newRes['_version'] = site().version;\r\n    newRes['siteName'] = site().siteName;\r\n    /* tslint:enable */\r\n    const resourcePlayer : ResourcePlayer = new ResourcePlayer(newRes, this);\r\n\r\n    // Add the resource player to the child resource container for this container.\r\n    const indexName = internals.slugify(newRes.name);\r\n    const childArray = this._resources[indexName];\r\n    if ( childArray === undefined ) {\r\n      this._resources[indexName] = [ resourcePlayer ];\r\n    }\r\n    else {\r\n      childArray.push(resourcePlayer);\r\n    }\r\n    log.info('+ %s', indexName);\r\n  }\r\n\r\n\r\n  /**\r\n   * Find the first resource of the given type\r\n   *\r\n   * @param {string} typeName (description)\r\n   * @returns {Container} (description)\r\n   */\r\n  getFirstMatching( typeName : string ) : Container {\r\n    const childArray = this._resources[typeName];\r\n    if ( childArray === undefined ) {\r\n      return undefined;\r\n    }\r\n    return childArray[0];\r\n  }\r\n\r\n\r\n  /**\r\n   * Retruieve the child of a resource with the given name\r\n   *\r\n   * @param {string} name (description)\r\n   * @param {number} [idx=0] (description)\r\n   * @returns {Container} (description)\r\n   */\r\n  getChild( name : string, idx : number = 0 ) : Container {\r\n    if ( this._resources[name] && this._resources[name].length > idx ) {\r\n      return this._resources[name][idx];\r\n    }\r\n    else {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Return the number of children resources of the given type.\r\n   *\r\n   * @param {string} typeName (description)\r\n   * @returns {number} (description)\r\n   */\r\n  childTypeCount( typeName : string ) : number {\r\n    if ( this._resources[typeName] ) {\r\n      return this._resources[typeName].length;\r\n    }\r\n    else {\r\n      return 0;\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Return the total number of children resources for this node.\r\n   *\r\n   * @returns {number} count result as number\r\n   */\r\n  childrenCount() : number {\r\n    let counter : number = 0;\r\n    _.each< Container[]>( this._resources, ( arrayItem : Container[] ) => { counter += arrayItem.length; } );\r\n    return counter;\r\n  }\r\n\r\n}\r\n\r\n\r\n/**\r\n * Helper class used to deliver a response from a HTTP verb function call.\r\n * An instance of this class is passed as argument to all verb functions\r\n*/\r\nexport class Response {\r\n\r\n  /** @internal */\r\n  private _onOk : ( resp : ResourceResponse ) => void;\r\n  /** @internal */\r\n  private _onFail : ( err : RxError ) => void;\r\n  /** @internal */\r\n  private _resource : Container;\r\n\r\n  /**\r\n   * Creates an instance of Response.\r\n   * @internal\r\n   * @param {Container} resource (description)\r\n   */\r\n  constructor( resource : Container ) {\r\n    this._resource = resource;\r\n  }\r\n\r\n  /**\r\n   * (description)\r\n   * @internal\r\n   * @param {( resp : ResourceResponse ) => void} cb (description)\r\n   */\r\n  onOk( cb : ( resp : ResourceResponse ) => void ) : void  {\r\n    this._onOk = cb;\r\n  }\r\n  /**\r\n   * (description)\r\n   * @internal\r\n   * @param {( err : RxError ) => void} cb (description)\r\n   */\r\n  onFail( cb : ( err : RxError ) => void ) : void  {\r\n    this._onFail = cb;\r\n  }\r\n\r\n  //\r\n  /**\r\n   * To return a resource without error invoke this function on the response object receive in the request call\r\n   */\r\n  ok() : void {\r\n    const respObj : ResourceResponse = {\r\n      cookiesData : this._resource.cookiesData,\r\n      httpCode : 200,\r\n      result : 'ok'\r\n    };\r\n    respObj.data = this._resource.data;\r\n    respObj.headers = this._resource.headers;\r\n    if (this._onOk) {\r\n      this._onOk( respObj );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Call this function to redirect the caller to a different URL\r\n   * Code 303\r\n   *\r\n   * @param {string} where (description)\r\n   */\r\n  redirect( where : string ) : void {\r\n    const respObj : ResourceResponse = {\r\n      cookiesData : this._resource.cookiesData,\r\n      httpCode : 303,\r\n      location : where,\r\n      result : 'ok'\r\n    };\r\n    respObj.data = this._resource.data;\r\n    if (this._onOk) {\r\n      this._onOk( respObj );\r\n    }\r\n  }\r\n\r\n  //\r\n  /**\r\n   * Call this function to return an error to the caller\r\n   *\r\n   * @param {RxError} err (description)\r\n   */\r\n  fail( err : RxError ) : void {\r\n    const log = internals.log().child( { func : this._resource.name + '.fail' } );\r\n    log.info('Call failed: %s', err.message );\r\n    if (this._onFail) {\r\n      this._onFail( err );\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Routing direction for a request to a resource\r\n * @internal\r\n * @export\r\n * @class Direction\r\n */\r\nexport class Direction {\r\n  resource : Container;\r\n  route : routing.Route;\r\n  verb : string;\r\n}\r\n\r\n\r\n/**\r\n * Every resource is converted to their embodiment before is sent back as a HTTP Response\r\n * @internal\r\n */\r\nexport class Embodiment {\r\n\r\n  public httpCode : number;\r\n  public location : string;\r\n  public mimeType : string;\r\n  public bodyData : Buffer;\r\n  public bodyStream : fs.ReadStream;\r\n  public cookiesData : string[] = []; // example a cookie valie would be [\"type=ninja\", \"language=javascript\"]\r\n  public additionalHeaders : ResponseHeaders = {};\r\n\r\n  /**\r\n   * Builds a new Embodiment object that can be served back as a response to a HTTP request.\r\n   */\r\n  constructor(  mimeType : string, code : number = 200, data? : Buffer | stream.Readable ) {\r\n    this.httpCode = code;\r\n    if ( data instanceof stream.Readable ) {\r\n      this.bodyStream = <stream.Readable>data;\r\n    }\r\n    else {\r\n      this.bodyData = <Buffer>data;\r\n    }\r\n\r\n    this.mimeType = mimeType;\r\n  }\r\n\r\n  /**\r\n   * Add a serialized cookie (toString()) to be returned as part of this embodiment\r\n   */\r\n  addSetCookie( cookie : string ) : void {\r\n    this.cookiesData.push(cookie);\r\n  }\r\n\r\n  /**\r\n   * Add headers to this embodiment\r\n   */\r\n  setAdditionalHeaders( headers : any ) : void {\r\n    if ( !this.additionalHeaders ) {\r\n      this.additionalHeaders = _.clone(headers);\r\n    }\r\n    else {\r\n      _.merge( this.additionalHeaders, headers );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Serve this emnbodiment through the given ServerResponse\r\n   */\r\n  serve(response : http.ServerResponse) : void {\r\n    const log = internals.log().child( { func: 'Embodiment.serve'} );\r\n    const headers = { 'content-type' : this.mimeType };\r\n    if ( this.bodyData ) {\r\n      headers['content-length'] = this.bodyData.length;\r\n    }\r\n    if ( this.location ) {\r\n      /* tslint:disable */\r\n      headers['Location'] = this.location;\r\n      /* tslint:enable */\r\n    }\r\n\r\n    // Add the additionalHeaders to the response\r\n    _.forOwn( this.additionalHeaders, (value : string, key : string ) => {\r\n      response.setHeader(key, value);\r\n    });\r\n\r\n    // Add the cookies set to the header (pass the full array to allow writing multiple cookies)\r\n    if ( this.cookiesData ) {\r\n      response.setHeader('Set-Cookie', <any>(this.cookiesData) );\r\n    }\r\n\r\n    response.writeHead( this.httpCode, headers );\r\n    if ( this.bodyData ) {\r\n      response.write(this.bodyData);\r\n      if ( this.bodyData.length > 1024 ) {\r\n        log.info( 'Sending %s Kb (as %s)', Math.round( this.bodyData.length / 1024 ), this.mimeType ) ;\r\n      }\r\n      else {\r\n        log.info( 'Sending %s bytes (as %s)', this.bodyData.length, this.mimeType );\r\n      }\r\n      response.end();\r\n      log.info( '<< REQUEST: Complete');\r\n    }\r\n    else if ( this.bodyStream ) {\r\n      log.info( 'Streaming Data');\r\n      this.bodyStream.pipe( response, { end: false } );\r\n      this.bodyStream.on('end', () => {\r\n        response.end();\r\n        log.info( 'Stream Complete');\r\n      });\r\n    }\r\n    else { // Anything else complete the response with no data attached.\r\n      response.end();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * utility: return the body of this embodiment as utf-8 encoded string\r\n   */\r\n  bodyAsString() : string {\r\n    return this.bodyData.toString('utf-8');\r\n  }\r\n\r\n  /**\r\n   * utility: return the bosy of this embodiment as a JSON object\r\n   */\r\n  bodyAsJason() : any {\r\n    return JSON.parse(this.bodyAsString());\r\n  }\r\n}\r\n\r\n/**\r\n * Root object for the application is the Site.\r\n * The site is in itself a Resource and is accessed via the root / in a url.\r\n */\r\nexport class Site extends Container implements HttpPlayer {\r\n\r\n  /** @internal */\r\n  private static _instance : Site = undefined;\r\n  // private _name: string = \"site\";\r\n  /** @internal */\r\n  private _version : string = version;\r\n  /** @internal */\r\n  private _siteName : string = 'site';\r\n  /** @internal */\r\n  private _home : string = '/';\r\n  /** @internal */\r\n  private _tempDir : string;\r\n  /** @internal */\r\n  private _pathCache = {};\r\n  /** @internal */\r\n  private _errorView : string = undefined;\r\n  /** @internal */\r\n  private _allowCors : boolean = false;\r\n  /** @internal */\r\n  private _filters : RequestFilterDict = {} ;\r\n\r\n  /**\r\n   * Returns the direction toward the resource in the given route.\r\n   * The Direction object returned may point directly to the resource requested or\r\n   * may point to a resource that will lead to the requested resource\r\n   * @internal\r\n  */\r\n  protected _getDirection( route : routing.Route, verb : string = 'GET' ) : Direction {\r\n    const log = internals.log().child( { func : 'Site._getDirection'} );\r\n    const cachedPath = this._pathCache[route.pathname];\r\n    if ( cachedPath ) {\r\n      const direction = new Direction();\r\n      direction.resource = cachedPath.resource;\r\n      direction.route = route;\r\n      direction.route.path = cachedPath.path;\r\n      direction.verb = verb;\r\n      log.info('%s Path Cache found for \"%s\"', verb, route.pathname );\r\n      return direction;\r\n    }\r\n    else {\r\n      log.info('%s Step into %s ', verb, route.pathname );\r\n      const direction = this._getStepDirection(route);\r\n      if ( direction && direction.resource ) {\r\n        direction.verb = verb;\r\n        return direction;\r\n      }\r\n    }\r\n    log.info('No Direction found', verb, route.pathname );\r\n    return undefined;\r\n  }\r\n\r\n  /**\r\n   * (description)\r\n   *\r\n   * @type {boolean}\r\n   */\r\n  public enableFilters : boolean = false;\r\n\r\n  /**\r\n   * Creates an instance of Site.\r\n   *\r\n   * @param {string} siteName (description)\r\n   * @param {Container} [parent] (description)\r\n   */\r\n  constructor( siteName : string, parent? : Container ) {\r\n    super(parent);\r\n    this._siteName = siteName;\r\n    if ( Site._instance ) {\r\n      throw new Error('Error: Only one site is allowed.');\r\n    }\r\n    Site._instance = this;\r\n\r\n    internals.initLog(siteName);\r\n\r\n    if ( _.find( process.argv, (arg : string ) => arg === '--relaxjs-verbose' ) ) {\r\n      internals.setLogVerbose(true);\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * (description)\r\n   *\r\n   * @static\r\n   * @param {string} [name] (description)\r\n   * @returns {Site} (description)\r\n   */\r\n  public static $( name? : string ) : Site {\r\n    if ( Site._instance === undefined || name ) {\r\n      Site._instance = undefined;\r\n      Site._instance = new Site( name ? name : 'site' );\r\n    }\r\n    return Site._instance;\r\n  }\r\n\r\n\r\n  /**\r\n   * Enable positive responses to OPTIONS Preflighted requests in CORS\r\n   */\r\n  public allowCORS( flag : boolean ) : void {\r\n    this._allowCors = flag;\r\n  }\r\n\r\n  /**\r\n   * name of this resource (it should be 'site')\r\n   *\r\n   * @readonly\r\n   * @type {string}\r\n   */\r\n  get name() : string {\r\n    return 'site';\r\n  }\r\n\r\n  /**\r\n   * relaxjs version\r\n   *\r\n   * @readonly\r\n   * @type {string}\r\n   */\r\n  get version() : string {\r\n    return this._version;\r\n  }\r\n\r\n  /**\r\n   * name of this site\r\n   *\r\n   * @readonly\r\n   * @type {string}\r\n   */\r\n  get siteName() : string {\r\n    return this._siteName;\r\n  }\r\n\r\n  /**\r\n   * Setup a shortcut to a specific resource. This function is used internally.\r\n   * @internal\r\n   * @param {string} path (description)\r\n   * @param {{ resource : ResourcePlayer; path : string[] }} shortcut (description)\r\n   */\r\n  setPathCache( path : string, shortcut : { resource : ResourcePlayer; path : string[] } ) : void {\r\n    this._pathCache[path] = shortcut;\r\n  }\r\n\r\n  /**\r\n   * Override the Error output using a custom view.\r\n   *\r\n   * @param {string} name (description)\r\n   */\r\n  setErrorView( name : string ) : void {\r\n    this._errorView = name;\r\n  }\r\n\r\n  /**\r\n   * Output to response the given error following the mime type in format.\r\n   * @internal\r\n   * @private\r\n   * @param {http.ServerResponse} response (description)\r\n   * @param {RxError} error (description)\r\n   * @param {string} format (description)\r\n   * @returns {void} (description)\r\n   */\r\n  private _outputError( response : http.ServerResponse, error : RxError, format : string ) : void {\r\n    const self = this;\r\n    const log = internals.log().child( { func : 'Site._outputError'} );\r\n    const mimeType = format.split(/[\\s,]+/)[0];\r\n    const errCode = error.getHttpCode ? error.getHttpCode() : 500;\r\n\r\n    const errObj = {\r\n      error : {\r\n        message : error.message,\r\n        name : error.name,\r\n        stack : error.stack.split('\\n')\r\n      },\r\n      result : 'error',\r\n      version : version\r\n    };\r\n\r\n    switch ( mimeType ) {\r\n      case 'text/html':\r\n        if ( self._errorView ) {\r\n          log.info(`Custom Error View [${self._errorView}]`);\r\n          internals.viewDynamic( self._errorView, { data : { error : errObj } } )\r\n          .then( ( reply : Embodiment ) => {\r\n             log.info(`Error Reply ${reply}`);\r\n             reply.httpCode = errCode;\r\n             reply.serve(response);\r\n             response.end();\r\n          })\r\n          .fail( (err : Error ) => {\r\n            log.error(`Custom Error Reply Failes ${err}`);\r\n            response.writeHead( errCode, { 'content-type' : mimeType } );\r\n            response.write('<html><body style=\"font-family:arial;\"><h1>relaxjs: the resource request caused an error.</h1>');\r\n            response.write(`<h2>${error.name}</h2><h3 style=\"color:red;\">${_.escape(error.message)}</h3><hr/><pre>${_.escape(error.stack)}</pre>`);\r\n            response.write('<body></html>');\r\n            response.end();\r\n          });\r\n          return;\r\n        }\r\n        else {\r\n          response.writeHead( errCode, { 'content-type' : mimeType } );\r\n          response.write('<html><body style=\"font-family:arial;\"><h1>relaxjs: the resource request caused an error.</h1>');\r\n          response.write(`<h2>${error.name}</h2><h3 style=\"color:red;\">${_.escape(error.message)}</h3><hr/><pre>${_.escape(error.stack)}</pre>`);\r\n          response.write('<body></html>');\r\n        }\r\n      break;\r\n      case 'application/xml':\r\n      case 'text/xml':\r\n        const builder = new xml2js.Builder({ rootName : 'relaxjs' });\r\n        response.writeHead( errCode, { 'content-type' : mimeType } );\r\n        response.write( builder.buildObject(errObj) );\r\n      break;\r\n      default:\r\n        response.writeHead( errCode, { 'content-type' : mimeType } );\r\n        response.write( JSON.stringify(errObj) );\r\n      break;\r\n    }\r\n    response.end();\r\n  }\r\n\r\n  /**\r\n   * Add a request filter. The given function will be called on every request\r\n   * before reaching any resource. All request filters must succeed for the\r\n   * request to procees towards a resource.\r\n   *\r\n   * @param {string} name (description)\r\n   * @param {RequestFilter} filterFunction (description)\r\n   */\r\n  addRequestFilter( name : string, filterFunction : RequestFilter ) : void {\r\n    const log = internals.log().child( { func : 'Site.addRequestFilter'} );\r\n    this._filters[name] = filterFunction;\r\n    log.info('filters', _.keys(this._filters) );\r\n  }\r\n\r\n  /**\r\n   * Remove an existing request filter.\r\n   *\r\n   * @param {string} name (description)\r\n   * @returns {boolean} (description)\r\n   */\r\n  deleteRequestFilter( name : string ) : boolean {\r\n    if ( name in this._filters ) {\r\n      delete this._filters[name];\r\n      return true;\r\n    }\r\n    return false;\r\n    // return ( _.remove( this._filters, (f) => f === filterFunction ) !== undefined );\r\n  }\r\n\r\n  /**\r\n   * Delete ALL request filters associated with this site\r\n   *\r\n   * @returns {boolean} (description)\r\n   */\r\n  deleteAllRequestFilters() : boolean {\r\n    this._filters = {};\r\n    return true;\r\n  }\r\n\r\n  /*\r\n   * Execute all the active filters, collect their returned data and post all of them in the returned promise.\r\n   * @internal\r\n   * @private\r\n   * @param {routing.Route} route (description)\r\n   * @param {*} body (description)\r\n   * @param {http.ServerResponse} response (description)\r\n   * @returns {Q.Promise< FiltersData >} (description)\r\n   */\r\n  private _checkFilters( route : routing.Route, body : any, response : http.ServerResponse ) : Q.Promise< FiltersData > {\r\n    const self = this;\r\n    const log = internals.log().child( { func : 'Site._checkFilters'} );\r\n    const later = Q.defer< FiltersData > ();\r\n    if ( !self.enableFilters || Object.keys(self._filters).length === 0 ) {\r\n      log.info(`no filters executed `);\r\n      later.resolve( {} );\r\n      return later.promise;\r\n    }\r\n\r\n    log.info(`executing filters `);\r\n\r\n    // All filters call are converted to promise returning functions and stored in an array\r\n    const filtersCalls = _.map( _.values(self._filters), (f : RequestFilter ) => Q.nfcall( f.bind( self, route, body) ) );\r\n\r\n    // Filter the request: execute all the filters (the first failing will trigger a fail and it will\r\n    // not waiting for the rest of the batch)\r\n    Q.all( filtersCalls )\r\n      .then( ( dataArr : any[] ) => {\r\n        let filterData : FiltersData = {};\r\n        _.each( _.keys(self._filters), (name : string, i : number ) => {\r\n          if ( dataArr[i] ) {\r\n            filterData[name] = dataArr[i];\r\n          }\r\n        });\r\n        log.info(`all ${dataArr.length} filters passed `);\r\n        later.resolve(filterData);\r\n      })\r\n      .fail( ( err : RxError ) => {\r\n        log.warn(`filters not passed ${err.message}`);\r\n        later.reject( err );\r\n      });\r\n\r\n    return later.promise;\r\n  }\r\n\r\n  /**\r\n   * Serve this site. This call creates a Server for the site and manage all the requests\r\n   * by routing them to the appropriate resources.\r\n   *\r\n   * @returns {http.Server} (description)\r\n   */\r\n  serve() : http.Server {\r\n    const self = this;\r\n    const srv = http.createServer( (msg : http.ServerRequest , response : http.ServerResponse) => {\r\n      // here we need to route the call to the appropriate class:\r\n      const route : routing.Route = routing.fromRequestResponse(msg, response);\r\n      const site : Site = this;\r\n      const log = internals.log().child( { func : 'Site.serve'} );\r\n\r\n      this._cookies = route.cookies;  // The client code can retrieved the cookies using this.getCookies();\r\n\r\n      log.info('>> REQUEST: %s', route.verb );\r\n      log.info('      PATH: %s %s', route.pathname, route.query);\r\n      log.info('Out FORMAT: %s', route.outFormat);\r\n      log.info(' In FORMAT: %s', route.inFormat);\r\n      const httpMethod = msg.method.toLowerCase();\r\n      if ( site[httpMethod] === undefined ) {\r\n        if ( httpMethod === 'options' && this._allowCors ) {\r\n          const emb = new Embodiment(route.outFormat);\r\n          emb.setAdditionalHeaders({\r\n            'Access-Control-Allow-Origin' : '*' ,\r\n            'Access-Control-Allow-Methods' : 'POST, GET, OPTIONS, PATCH, DELETE'\r\n          });\r\n          emb.serve(response);\r\n        }\r\n        else {\r\n          const err = new RxError(`Requst ${httpMethod} not allowed`, 'request not supported', 403);\r\n          self._outputError(response, err, route.outFormat);\r\n        }\r\n        return;\r\n      }\r\n\r\n      let requestData;\r\n      // Parse the data received with this request\r\n      internals.parseRequestData(msg, route.inFormat)\r\n        .then( ( bodyData : any ) => {\r\n          requestData = bodyData;\r\n          log.info('check filters');\r\n          return self._checkFilters( route, bodyData, response );\r\n        })\r\n        .then( ( allFiltersData : FiltersData ) => {\r\n          // Execute the HTTP request\r\n          site[httpMethod]( route, requestData, allFiltersData )\r\n            .then( ( reply : Embodiment ) => {\r\n              if ( self._allowCors) {\r\n                reply.setAdditionalHeaders({ 'Access-Control-Allow-Origin' : '*' });\r\n              }\r\n              reply.serve(response);\r\n            })\r\n            .fail( (error : RxError ) => {\r\n              if ( error.httpCode >= 300 ) {\r\n                log.error(`HTTP ${msg.method} failed : ${error.httpCode} : ${error.name} - ${error.message}`);\r\n              }\r\n              self._outputError(response, error, route.outFormat);\r\n            })\r\n            .done();\r\n        })\r\n        .fail( (error : RxError ) => {\r\n          if ( error.httpCode >= 300 ) {\r\n            log.error(`HTTP ${msg.method} failed : ${error.httpCode} : ${error.name} - ${error.message}`);\r\n          }\r\n          self._outputError(response, error , route.outFormat );\r\n          });\r\n        }); // End http.createServer()\r\n    return srv;\r\n  }\r\n\r\n  /**\r\n   * Set the Home resource for this site by giving its path\r\n   *\r\n   * @param {string} path (description)\r\n   */\r\n  setHome( path : string ) : void {\r\n    this._home = path;\r\n  }\r\n\r\n  /**\r\n   * Set the given path as location for temporary files produced by POST and PUT operations\r\n   *\r\n   * @param {string} path (description)\r\n   */\r\n  setTempDirectory( path : string ) : void {\r\n    this._tempDir = path;\r\n    internals.setMultipartDataTempDir(path);\r\n  }\r\n\r\n  // HTTP Verb functions --------------------\r\n\r\n  /**\r\n   * HTTP verb HEAD response functiion. Analyze the give route and redirect the call to the appropriate\r\n   * child resource if available.\r\n   * @internal\r\n   */\r\n  head( route : routing.Route, body : any, filterData : FiltersData = {} ) : Q.Promise< Embodiment > {\r\n    const self = this;\r\n    const log = internals.log().child( { func : 'Site.head'} );\r\n    log.info('route: %s', route.pathname);\r\n    if ( route.path.length > 1 ) {\r\n      const direction = self._getDirection( route, 'HEAD' );\r\n      if ( !direction ) {\r\n        return internals.promiseError( internals.format('Resource not found or invalid in request \"{0}\"', route.pathname) , route.pathname, 404 );\r\n      }\r\n      route.path = direction.route.path;\r\n      const res = <ResourcePlayer>(direction.resource);\r\n      return res.head(route, filterData);\r\n    }\r\n    if ( self._home === '/') {\r\n       return internals.viewDynamic(self.name, this );\r\n     }\r\n     else {\r\n       log.info('HEAD is redirecting to \"%s\"', self._home );\r\n       return internals.redirect( self._home );\r\n     }\r\n  }\r\n\r\n  /**\r\n   * HTTP verb GET response functiion. Analyze the give route and redirect the call to the appropriate\r\n   * child resource if available.\r\n   * @internal\r\n   */\r\n  get( route : routing.Route, body : any, filterData : FiltersData = {} ) : Q.Promise< Embodiment > {\r\n    const self = this;\r\n    const log = internals.log().child( { func : 'Site.get'} );\r\n    log.info('route: %s', route.pathname);\r\n\r\n    if ( route.static ) {\r\n      return internals.viewStatic( decodeURI(route.pathname), route.headers );\r\n    }\r\n\r\n\r\n    if ( route.path.length > 1 ) {\r\n      const direction = self._getDirection( route, 'GET' );\r\n      if ( direction === undefined ) {\r\n        return internals.promiseError(  internals.format('[error] Resource not found or invalid in request \"{0}\"', route.pathname), route.pathname, 404 );\r\n      }\r\n      route.path = direction.route.path;\r\n      const res = <ResourcePlayer>(direction.resource);\r\n      return res.get(route, filterData);\r\n    }\r\n\r\n    if ( route.path[0] === 'site' && self._home === '/') {\r\n      return internals.viewDynamic(self.name, this );\r\n    }\r\n    if ( self._home !== '/' ) {\r\n      log.info('GET is redirecting to home \"%s\"', self._home );\r\n      return internals.redirect( self._home );\r\n    }\r\n\r\n    return internals.promiseError( internals.format('[error] Root Resource not found or invalid in request \"{0}\"', route.pathname ), route.pathname, 404 );\r\n  }\r\n\r\n\r\n  /**\r\n   * HTTP verb POST response functiion. Analyze the give route and redirect the call to the appropriate\r\n   * child resource if available.\r\n   * @internal\r\n   */\r\n  post( route : routing.Route, body : any, filterData : FiltersData = {} ) : Q.Promise< Embodiment > {\r\n    const self = this;\r\n    const log = internals.log().child( { func : 'Site.post'} );\r\n    if ( route.path.length > 1 ) {\r\n      const direction = self._getDirection( route, 'POST' );\r\n      if ( !direction ) {\r\n        return internals.promiseError( internals.format('[error] Resource not found or invalid in request \"{0}\"', route.pathname ), route.pathname );\r\n      }\r\n      const res = <ResourcePlayer>(direction.resource);\r\n      log.info('POST on resource \"%s\"', res.name );\r\n      route.path = direction.route.path;\r\n      return res.post( direction.route, body, filterData );\r\n    }\r\n    return internals.promiseError(  internals.format('[error] Invalid in request \"{0}\"', route.pathname ), route.pathname, 404 );\r\n  }\r\n\r\n\r\n  /**\r\n   * HTTP verb PATCH response functiion. Analyze the give route and redirect the call to the appropriate\r\n   * child resource if available.\r\n   * @internal\r\n   */\r\n  patch( route : routing.Route, body : any, filterData : FiltersData = {} ) : Q.Promise<Embodiment> {\r\n    const self = this;\r\n    const log = internals.log().child( { func : 'Site.patch'} );\r\n    if ( route.path.length > 1 ) {\r\n      const direction = self._getDirection( route, 'PATCH' );\r\n      if ( !direction ) {\r\n        return internals.promiseError( internals.format('[error] Resource not found or invalid in request \"{0}\"', route.pathname ), route.pathname, 404 );\r\n      }\r\n      const res = <ResourcePlayer>(direction.resource);\r\n      log.info('PATCH on resource \"%s\"', res.name );\r\n      route.path = direction.route.path;\r\n      return res.patch( direction.route, body, filterData );\r\n    }\r\n    return internals.promiseError(  internals.format('[error] Invalid in request \"{0}\"', route.pathname ), route.pathname, 404 );\r\n  }\r\n\r\n\r\n  /**\r\n   * HTTP verb PUT response functiion. Analyze the give route and redirect the call to the appropriate\r\n   * child resource if available.\r\n   * @internal\r\n   */\r\n  put( route : routing.Route, body : any, filterData : FiltersData = {}  ) : Q.Promise<Embodiment> {\r\n    const log = internals.log().child( { func : 'Site.put'} );\r\n    const self = this;\r\n    if ( route.path.length > 1 ) {\r\n      const direction = self._getDirection( route, 'PUT' );\r\n      if ( !direction ) {\r\n        return internals.promiseError( internals.format('[error] Resource not found or invalid in request \"{0}\"', route.pathname ), route.pathname, 404 );\r\n      }\r\n      const res = <ResourcePlayer>(direction.resource);\r\n      log.info('PUT on resource \"%s\"', res.name );\r\n      route.path = direction.route.path;\r\n      return res.put( direction.route, body, filterData );\r\n    }\r\n    return internals.promiseError( internals.format('[error] Invalid PUT request \"{0}\"', route.pathname ), route.pathname, 404 );\r\n  }\r\n\r\n\r\n  /**\r\n   * HTTP verb DELETE response functiion. Analyze the give route and redirect the call to the appropriate\r\n   * child resource if available.\r\n   * @internal\r\n   */\r\n  delete( route : routing.Route, body : any, filterData : FiltersData = {} ) : Q.Promise<Embodiment> {\r\n    const self = this;\r\n    const ctx = `[${this.name}.delete] `;\r\n    if ( route.static ) {\r\n      return internals.promiseError( 'DELETE not supported on static resources', route.pathname );\r\n    }\r\n\r\n    if ( route.path.length > 1 ) {\r\n      const direction = self._getDirection( route, 'DELETE' );\r\n      if ( !direction ) {\r\n        return internals.promiseError( internals.format('{0} [error] Resource not found or invalid in request \"{1}\"', ctx, route.pathname ), route.pathname, 404 );\r\n      }\r\n      const res = <ResourcePlayer>(direction.resource);\r\n      internals.log().info('%s \"%s\"', ctx, res.name );\r\n      route.path = direction.route.path;\r\n      return res.delete( direction.route, filterData );\r\n    }\r\n    return internals.promiseError( internals.format('[error] Invalid DELETE request \"{0}\"', route.pathname ), route.pathname, 404 );\r\n  }\r\n\r\n}\r\n\r\n\r\n/**\r\n * ResourcePlayer absorbs a user defined resource and execute the HTTP requests.\r\n * The player dispatch requests to the childres resources or invoke user defined\r\n * response function for each verb.\r\n * @internal\r\n */\r\nexport class ResourcePlayer extends Container implements HttpPlayer {\r\n\r\n  static version = version;\r\n  // private _site: Site;\r\n  private _template : string = '';\r\n  private _layout : string;\r\n  private _paramterNames : string[];\r\n  private _outFormat : string;\r\n\r\n  private _onGet : ( query : any, respond : Response ) => void;\r\n  private _onPost : ( query : any, body : any, respond : Response ) => void;\r\n  private _onPatch : ( query : any, body : any, respond : Response ) => void;\r\n  private _onDelete : ( query : any, respond : Response ) => void;\r\n  private _onPut : ( query : any, body : any, respond : Response ) => void;\r\n\r\n  private _parameters = {};\r\n\r\n  public filtersData : FiltersData = {};\r\n\r\n  // public data = {};\r\n\r\n  /**\r\n   * Build a active resource by providing a Resource data object\r\n   */\r\n  constructor( res : Resource, parent : Container ) {\r\n    super(parent);\r\n    const self = this;\r\n    self.setName(res.name);\r\n    self._template = res.view;\r\n    self._layout = res.layout;\r\n    self._paramterNames = res.urlParameters ? res.urlParameters : [];\r\n    self._parameters = {};\r\n    self._outFormat = res.outFormat;\r\n    self._onGet = res.onGet;\r\n    self._onPost = res.onPost;\r\n    self._onPatch = res.onPatch;\r\n    self._onDelete = res.onDelete;\r\n    self._onPut = res.onPut;\r\n\r\n    // Add children resources if available\r\n    if ( res.resources ) {\r\n      _.each( res.resources, ( child : Resource, index : number) => {\r\n        self.add( child );\r\n      });\r\n    }\r\n    // Merge the data into this object to easy access in the view.\r\n    self._updateData(res.data);\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n  setOutputFormat( fmt : string ) : void  {\r\n    this._outFormat = fmt;\r\n  }\r\n\r\n  set outFormat( f : string ) {\r\n    this._outFormat = f;\r\n  }\r\n\r\n  get resources() : any {\r\n    return this._resources;\r\n  }\r\n\r\n\r\n  /*\r\n   * Reads the parameters from a route and store them in the this._parmaters member.\r\n   * Return the number of paramters correcly parsed.\r\n  */\r\n  private _readParameters( path : string[], generateError : boolean = true ) : number {\r\n    const log = internals.log().child( { func : this.name + '._readParameters'} );\r\n    let counter = 0;\r\n    _.each(this._paramterNames, ( parameterName : string, idx : number /*, list*/ ) => {\r\n      if ( !path[ idx + 1 ] ) {\r\n        if ( generateError ) {\r\n          log.error('Could not read all the required paramters from URI. Read %d, needed %d', counter, this._paramterNames.length );\r\n        }\r\n        return counter; // breaks out of the each loop.\r\n      }\r\n      this._parameters[ parameterName ] = path[ idx + 1 ];\r\n      counter++;\r\n    });\r\n    log.info('Read %d parameters from request URL: %s', counter, JSON.stringify(this._parameters) );\r\n    return counter;\r\n  }\r\n\r\n\r\n  /*\r\n   * Reset the data property for this object and copy all the\r\n   * elements from the given parameter into it.\r\n   */\r\n  private _updateData( newData : any ) : void {\r\n    const self = this;\r\n    self.data = {};\r\n    _.each(newData, ( value : any, attrname : string ) => {\r\n      if ( attrname !== 'resources') {\r\n        self.data[attrname] = value;\r\n      }\r\n    } );\r\n  }\r\n\r\n\r\n  /*\r\n   * Delivers a reply as Embodiment of the given response through the given promise and\r\n   * in the given outFormat\r\n  */\r\n  private _deliverReply( later : Q.Deferred<Embodiment>,\r\n                         resResponse : ResourceResponse,\r\n                         outFormat : string,\r\n                         deliverAnyFormat : boolean = false ) : void {\r\n    const self = this;\r\n    const log = internals.log().child( { func : 'ResourcePlayer(' + self.name + ')._deliverReply' } );\r\n\r\n    // Force application/json out format for redirect responses\r\n    if ( resResponse.httpCode === 303 || resResponse.httpCode === 307 ) {\r\n      outFormat = 'application/json';\r\n    }\r\n\r\n    const mimeTypes = outFormat ? outFormat.split(/[\\s,;]+/) : ['application/json'];\r\n    log.info('Formats: %s', JSON.stringify(mimeTypes));\r\n\r\n    // Use the template for GET html requests\r\n    if ( self._template &&\r\n        ( mimeTypes.indexOf('text/html') !== -1 || mimeTypes.indexOf('*/*') !== -1 ) ) {\r\n      // Here we copy the data into the resource itself and process it through the viewing engine.\r\n      // This allow the code in the view to act in the context of the resourcePlayer.\r\n      self.data = resResponse.data;\r\n      internals.viewDynamic(self._template, self, self._layout )\r\n        .then( ( reply : Embodiment ) => {\r\n          reply.httpCode = resResponse.httpCode ? resResponse.httpCode : 200;\r\n          reply.location = resResponse.location;\r\n          reply.cookiesData = resResponse.cookiesData;\r\n          reply.additionalHeaders = self.headers;\r\n          later.resolve(reply);\r\n        })\r\n        .fail( (err : Error ) => {\r\n          later.reject(err);\r\n        });\r\n    }\r\n    else {\r\n      let mimeType = undefined;\r\n      // This is orrible, it should be improved in version 0.1.3\r\n      if ( mimeTypes.indexOf( '*/*' ) !== -1 ) { mimeType = 'application/json'; }\r\n      if ( mimeTypes.indexOf( 'application/json' ) !== -1 ) { mimeType = 'application/json'; }\r\n      if ( mimeTypes.indexOf( 'application/xml' ) !== -1 ) { mimeType = 'application/xml'; }\r\n      if ( mimeTypes.indexOf( 'text/xml' ) !== -1 ) { mimeType = 'text/xml'; }\r\n      if ( mimeTypes.indexOf( 'application/xhtml+xml' ) !== -1 ) { mimeType = 'application/xml'; }\r\n      if ( mimeTypes.indexOf( 'application/x-www-form-urlencoded' ) !== -1 ) { mimeType = 'text/xml'; }\r\n      if ( mimeType ) {\r\n        internals.createEmbodiment(resResponse.data, mimeType )\r\n          .then( ( reply : Embodiment ) => {\r\n            reply.httpCode = resResponse.httpCode ? resResponse.httpCode : 200;\r\n            reply.location = resResponse.location;\r\n            reply.cookiesData = resResponse.cookiesData;\r\n            reply.additionalHeaders = resResponse.headers;\r\n            later.resolve(reply);\r\n          })\r\n          .fail( (err : Error ) => {\r\n            later.reject(err);\r\n          });\r\n      }\r\n      else {\r\n        if ( deliverAnyFormat ) {\r\n          log.info(`Deliver anyformat: ${outFormat}`);\r\n          const reply = new Embodiment( outFormat, 200, resResponse.data );\r\n          reply.cookiesData = resResponse.cookiesData;\r\n          reply.additionalHeaders = resResponse.headers;\r\n          later.resolve(reply);\r\n        }\r\n        else {\r\n          later.reject( new RxError( 'output as (' + outFormat + ') is not available for this resource', 'Unsupported Media Type', 415 ) ); // 415 Unsupported Media Type\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  // -------------------- HTTP VERB FUNCIONS -------------------------------------\r\n\r\n\r\n  /**\r\n   * Resource Player HEAD. Get the response as for a GET request, but without the response body.\r\n   */\r\n  head( route : routing.Route, filtersData : FiltersData ) : Q.Promise<Embodiment> {\r\n    const later = Q.defer< Embodiment >();\r\n    this.resetOutgoingCookies();\r\n\r\n    _.defer( () => { later.reject( new RxError('Not Implemented')); });\r\n    return later.promise;\r\n  }\r\n\r\n\r\n  /**\r\n   * HttpPlayer GET. Analyze the route and redirect the call to a child resource or\r\n   * will call the onGet() for the this resource.\r\n   */\r\n  get( route : routing.Route, filtersData : FiltersData ) : Q.Promise< Embodiment > {\r\n    const self = this; // use to consistently access this object.\r\n    const log = internals.log().child( { func : 'ResourcePlayer(' + self.name + ').get'} );\r\n    const paramCount = self._paramterNames.length;\r\n    const later = Q.defer< Embodiment >();\r\n    this.resetOutgoingCookies();\r\n\r\n    // Dives in and navigates through the path to find the child resource that can answer this GET call\r\n    if ( route.path.length > ( 1 + paramCount ) ) {\r\n      const direction = self._getStepDirection( route );\r\n      if ( direction.resource ) {\r\n        const res = <ResourcePlayer>(direction.resource);\r\n        return res.get( direction.route, filtersData );\r\n      }\r\n      else {\r\n        if ( _.keys(self._resources).length === 0 ) {\r\n          return internals.promiseError( internals.format('[error: no child] This resource \"{0}\" does not have any child resource to navigate to. Path= \"{1}\"', self.name, JSON.stringify(route.path) ), route.pathname );\r\n        }\r\n        else {\r\n          return internals.promiseError( internals.format('[error: no such child] ResourcePlayer GET could not find a Resource for \"{0}\"',  JSON.stringify(route.path) ), route.pathname );\r\n        }\r\n      }\r\n    }\r\n\r\n    // 2 - Read the parameters from the route\r\n    log.info('GET Target Found : %s (requires %d parameters)', self.name, paramCount );\r\n    if ( paramCount > 0 ) {\r\n      if ( self._readParameters(route.path) < paramCount ) {\r\n        later.reject( new RxError( 'Not enough paramters available in the URI ', 'GET ' + self.name, 404 ));\r\n        return later.promise;\r\n      }\r\n    }\r\n\r\n    // Set the cach to invoke this resource for this path directly next time\r\n    site().setPathCache(route.pathname, { path : route.path, resource : this } );\r\n\r\n    // This is the resource that need to answer either with a onGet or directly with data\r\n    // var dyndata: any = {};\r\n\r\n    // If the onGet() is defined use id to get dynamic data from the user defined resource.\r\n    if ( self._onGet ) {\r\n      log.info('Invoking GET on %s (%s)', self.name, route.outFormat );\r\n      this.filtersData = filtersData;\r\n      this._headers = route.headers;\r\n      this._cookies = route.cookies;  // The client code can retrieved the cookies using this.getCookies();\r\n      const response = new Response( self );\r\n      response.onOk( ( resresp : ResourceResponse ) => {\r\n        self._updateData(resresp.data);\r\n        self._deliverReply( later, resresp, self._outFormat ? self._outFormat : route.outFormat, self._outFormat !== undefined );\r\n      });\r\n      response.onFail( ( rxErr : RxError ) => later.reject(rxErr) );\r\n      try {\r\n        self._onGet( route.query, response );\r\n      }\r\n      catch ( error) {\r\n        later.reject(error);\r\n      }\r\n      return later.promise;\r\n    }\r\n\r\n    // 4 - Perform the default GET that is: deliver the data associated with this resource\r\n    log.info('Returning static data from %s', self.name);\r\n    const responseObj : ResourceResponse = {\r\n      data : self.data,\r\n      httpCode : 200,\r\n      result : 'ok'\r\n    };\r\n    self._deliverReply(later, responseObj, self._outFormat ? self._outFormat : route.outFormat );\r\n    return later.promise;\r\n  }\r\n\r\n\r\n  /**\r\n   * HttpPlayer DELETE. Analyze the route and redirect the call to a child resource or\r\n   * will call the onGet() for the this resource.\r\n   */\r\n  delete( route : routing.Route, filtersData : FiltersData ) : Q.Promise<Embodiment> {\r\n    const self = this; // use to consistently access this object.\r\n    const log = internals.log().child( { func : 'ResourcePlayer(' + self.name + ').delete'} );\r\n    const paramCount = self._paramterNames.length;\r\n    const later = Q.defer< Embodiment >();\r\n    this.resetOutgoingCookies();\r\n\r\n\r\n    // 1 - Dives in and navigates through the path to find the child resource that can answer this DELETE call\r\n    if ( route.path.length > ( 1 + paramCount ) ) {\r\n      const direction = self._getStepDirection( route );\r\n      if ( direction ) {\r\n        const res = <ResourcePlayer>(direction.resource);\r\n        log.info('DELETE on resource \"%s\"', res.name );\r\n        return res.delete( direction.route, filtersData );\r\n      }\r\n      else {\r\n        return internals.promiseError( internals.format('[error] Resource not found \"{0}\"', route.pathname ), route.pathname );\r\n      }\r\n    }\r\n\r\n    // 2 - Read the parameters from the route\r\n    log.info('DELETE Target Found : %s (requires %d parameters)', self.name, paramCount );\r\n    if ( paramCount > 0 ) {\r\n      if ( self._readParameters(route.path) < paramCount ) {\r\n        later.reject( new RxError('Not enough paramters available in the URI ', 'DELETE ' + self.name, 404));\r\n        return later.promise;\r\n      }\r\n    }\r\n\r\n    // If the onDelete() is defined use it to invoke a user define delete.\r\n    if ( self._onDelete ) {\r\n      log.info('call onDelete() for %s', self.name );\r\n      this._headers = route.headers;\r\n      this._cookies = route.cookies;  // The client code can retrieved the cookies using this.getCookies();\r\n      this.filtersData = filtersData;\r\n      const response = new Response( self );\r\n      response.onOk( ( resresp : ResourceResponse ) => {\r\n        self._updateData(resresp.data);\r\n        self._deliverReply( later, resresp, self._outFormat ? self._outFormat : route.outFormat  );\r\n      });\r\n      response.onFail( ( rxErr : RxError ) => later.reject(rxErr) );\r\n      try {\r\n        this._onDelete( route.query, response );\r\n      }\r\n      catch ( err ) {\r\n        later.reject(err);\r\n      }\r\n      return later.promise;\r\n    }\r\n\r\n    // 4 - Perform the default DELETE that is: delete this resource\r\n    log.info('Default Delete: Removing resource %s', self.name );\r\n    self.parent.remove(self);\r\n    self.parent = undefined;\r\n    const responseObj : ResourceResponse = {\r\n      data : self.data,\r\n      httpCode : 200,\r\n      result : 'ok',\r\n    };\r\n    self._deliverReply(later, responseObj, self._outFormat ? self._outFormat : route.outFormat  );\r\n    return later.promise;\r\n  }\r\n\r\n\r\n  /**\r\n   * HttpPlayer POS. Analyze the route and redirect the call to a child resource or\r\n   * will call the onPost() for the this resource.\r\n   * The default action is to create a new subordinate of the web resource identified by the URI.\r\n   * The body sent to a post must contain the resource name to be created.\r\n   */\r\n  post( route : routing.Route, body : any, filtersData : FiltersData ) : Q.Promise< Embodiment > {\r\n    const self = this; // use to consistently access this object.\r\n    const log = internals.log().child( { func : 'ResourcePlayer(' + self.name + ').post'} );\r\n    const paramCount = self._paramterNames.length;\r\n    const later = Q.defer< Embodiment >();\r\n    this.resetOutgoingCookies();\r\n\r\n    // Dives in and navigates through the path to find the child resource that can answer this POST call\r\n    if ( route.path.length > ( 1 + paramCount ) ) {\r\n      const direction = self._getStepDirection( route );\r\n      if ( direction ) {\r\n        const res = <ResourcePlayer>(direction.resource);\r\n        log.info('POST on resource \"%s\"', res.name );\r\n        return res.post( direction.route, body, filtersData );\r\n      }\r\n      else {\r\n        return internals.promiseError( internals.format('[error] Resource not found \"{0}\"', route.pathname ), route.pathname );\r\n      }\r\n    }\r\n\r\n    // 2 - Read the parameters from the route\r\n    log.info('POST Target Found : %s (requires %d parameters)', self.name, paramCount );\r\n    if ( paramCount > 0 ) {\r\n      // In a POST not finding all the paramters expeceted should not fail the call.\r\n      self._readParameters( route.path, false );\r\n    }\r\n\r\n    // Call the onPost() for this resource (user code)\r\n    if ( self._onPost ) {\r\n      log.info('calling onPost() for %s', self.name );\r\n      this.filtersData = filtersData;\r\n      this._headers = route.headers;\r\n      this._cookies = route.cookies;  // The client code can retrieved the cookies using this.getCookies();\r\n      const response = new Response( self );\r\n      response.onOk( ( resresp : ResourceResponse ) => {\r\n        self._deliverReply(later, resresp, self._outFormat ? self._outFormat : route.outFormat  );\r\n      });\r\n      response.onFail( ( rxErr : RxError ) => later.reject(rxErr) );\r\n      try {\r\n        self._onPost( route.query, body, response );\r\n      }\r\n      catch ( err ) {\r\n        later.reject( new RxError(err) );\r\n      }\r\n      return later.promise;\r\n    }\r\n\r\n    // 4 - Perform the default POST that is: set the data directly\r\n    log.info('Adding data for %s', self.name );\r\n    self._updateData(body);\r\n    const responseObj : ResourceResponse = {\r\n      data : self.data,\r\n      httpCode : 200,\r\n      result : 'ok',\r\n    };\r\n    self._deliverReply(later, responseObj, self._outFormat ? self._outFormat : route.outFormat );\r\n    return later.promise;\r\n  }\r\n\r\n\r\n  /**\r\n   * HttpPlayer POS. Analyze the route and redirect the call to a child resource or\r\n   * will call the onPost() for the this resource.\r\n   * The default action is to apply partial modifications to a resource (as identified in the URI).\r\n   */\r\n  patch( route : routing.Route, body : any, filtersData : FiltersData ) : Q.Promise<Embodiment> {\r\n    const self = this; // use to consistently access this object.\r\n    const log = internals.log().child( { func : 'ResourcePlayer(' + self.name + ').patch'} );\r\n    const paramCount = self._paramterNames.length;\r\n    const later = Q.defer< Embodiment >();\r\n    this.resetOutgoingCookies();\r\n\r\n    // 1 - Dives in and navigates through the path to find the child resource that can answer this POST call\r\n    if ( route.path.length > ( 1 + paramCount ) ) {\r\n      const direction = self._getStepDirection( route );\r\n      if ( direction ) {\r\n        const res = <ResourcePlayer>(direction.resource);\r\n        log.info('PATCH on resource \"%s\"', res.name );\r\n        return res.patch( direction.route, body, filtersData );\r\n      }\r\n      else {\r\n        return internals.promiseError( internals.format('[error] Resource not found \"{0}\"', route.pathname ), route.pathname );\r\n      }\r\n    }\r\n\r\n    // 2 - Read the parameters from the route\r\n    log.info('PATCH Target Found : %s (requires %d parameters)', self.name, paramCount );\r\n    if ( paramCount > 0 ) {\r\n      if ( self._readParameters(route.path) < paramCount ) {\r\n        later.reject( new RxError('Not enough paramters available in the URI ', 'PATCH ' + self.name, 404));\r\n        return later.promise;\r\n      }\r\n    }\r\n\r\n    // 3 - call the resource defined function to respond to a PATCH request\r\n    if ( self._onPatch ) {\r\n      log.info('calling onPatch() for %s', self.name );\r\n      this.filtersData = filtersData;\r\n      this._headers = route.headers;\r\n      this._cookies = route.cookies;  // The client code can retrieved the cookies using this.getCookies();\r\n      const response = new Response( self );\r\n      response.onOk(  ( resresp : ResourceResponse ) => {\r\n        self._updateData(resresp.data);\r\n        self._deliverReply(later, resresp, self._outFormat ? self._outFormat : route.outFormat  );\r\n      });\r\n      response.onFail( ( rxErr : RxError ) => later.reject(rxErr) );\r\n      try {\r\n        self._onPatch( route.query, body, response );\r\n      }\r\n      catch ( err ) {\r\n        later.reject( new RxError(err) );\r\n      }\r\n      return later.promise;\r\n    }\r\n\r\n    // 4 - Perform the default PATH that is set the data directly\r\n    log.info('Updating data for %s', self.name );\r\n    self._updateData(body);\r\n    const responseObj : ResourceResponse = {\r\n      data : self.data,\r\n      httpCode : 200,\r\n      result : 'ok',\r\n    };\r\n    self._deliverReply(later, responseObj, self._outFormat ? self._outFormat : route.outFormat  );\r\n    return later.promise;\r\n  }\r\n\r\n\r\n  /*\r\n   * HttpPlayer PUT\r\n   * Asks that the enclosed entity be stored under the supplied URI.\r\n   * The body sent to a post does not contain the resource name to be stored since that name is the URI.\r\n  */\r\n  put( route : routing.Route, body : any, filtersData : FiltersData ) : Q.Promise<Embodiment> {\r\n    // const self = this; // use to consistently access this object.\r\n    // const log = internals.log().child( { func : 'ResourcePlayer(' +self.name+ ').put'} );\r\n    const later = Q.defer< Embodiment >();\r\n    this.resetOutgoingCookies();\r\n\r\n\r\n    _.defer( () => { later.reject( new RxError('Not Implemented')); });\r\n    return later.promise;\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * (description)\r\n *\r\n * @export\r\n * @param {string} [name] (description)\r\n * @returns {Site} (description)\r\n */\r\nexport function site( name? : string ) : Site {\r\n  return Site.$(name);\r\n}\r\n"],"sourceRoot":"/source/"}